#!/bin/bash

[ "$UID" -eq 0 ] || exec sudo bash "$0" "$@"

# Get the current directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Script constants
PROJECT_NAME="spark"
NOTEBOOK_DIR="$DIR/notebook"
CONTAINER_HOME="/root"
NOTEBOOK_URL="http://localhost:8888/"

# Check whether a command exists
# $1: Command to check for
command_exists() {
    type "$1" &> /dev/null ;
}

# Header
echo "Preparing to start container..."

# Start the installation script if the notebook directory doesn't exist
if [ ! -d "$NOTEBOOK_DIR" ]; then
    echo "The notebook directory isn't available, starting installation..."
    ./install
    echo
fi

# Start the docker container
echo "Starting container using Docker..."
sudo docker-compose -f "$DIR/docker-compose.yml" -p "$PROJECT_NAME" up -d

# Get the URL of the running notebook instance
echo "Waiting 2 seconds for Jupyter Notebook to start..."
NOTEBOOK_URL="$(sudo docker exec -i -t spark_spark_1 "$CONTAINER_HOME/geturl")"

# Open Notebook in the default browser depending on the operating system
if [ $(uname) == "Linux" ]; then
    if command_exists xdg-open ; then
	echo "Opening Notebook in your default browser..."
        xdg-open "$NOTEBOOK_URL"
    elif command_exists firefox ; then
	echo "Opening Notebook in Firefox..."
        firefox "$NOTEBOOK_URL"
    else
        echo "No suitable method found to automatically open Notebook."
    fi

elif [ $(uname) == "Darwin" ]; then
    echo "Opening Notebook in Safari..."
    open "$NOTEBOOK_URL"

else
    echo "Unable to automatically open Notebook, unknown platform."
fi

# Show the URL of the running notebook instance
echo
echo "Notebook is running at:"
echo "$NOTEBOOK_URL"

# Started successfully, show a status message
echo
echo "Use './stop' to stop the container."
echo "Start succeeded!"

