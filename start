#!/bin/bash

[ "$UID" -eq 0 ] || exec sudo bash "$0" "$@"

# Get the current path
MY_PATH="`dirname \"$0\"`"

# Script constants
PROJECT_NAME="spark"
PROJECT_NOTEBOOK_DIR="$MY_PATH/notebook"
CONTAINER_HOME="/root"

# Header
echo "Preparing to start container..."

# Function to check whether a command exists
command_exists() {
    type "$1" &> /dev/null ;
}

# Start the installation script if the notebook directory doesn't exist
if [ ! -d "$PROJECT_NOTEBOOK_DIR" ]; then
    echo "The notebook directory isn't available, starting installation script..."
    ./install
fi

# Start the docker container
echo "Starting container using Docker..."
sudo docker-compose -f "$MY_PATH/docker-compose.yml" -p "$PROJECT_NAME" up -d

# Get the URL of the running notebook instance
echo "Waiting 2 seconds for Jupyter notebook to start..."
NOTEBOOK_URL=$(sudo docker exec -i -t spark_spark_1 "$CONTAINER_HOME/geturl")

# Open Notebook in the default browser depending on the operating system
if [ $(uname) == "Linux" ]; then
    if command_exists xdg-open ; then
	echo "Opening Jupyter Notebook in your default browser..."
        xdg-open "$NOTEBOOK_URL"
    elif command_exists firefox ; then
	echo "Opening Jupyter Notebook in Firefox..."
        firefox "$NOTEBOOK_URL"
    else
        echo "No suitable method found to automatically open Jupyter Notebook."
    fi

elif [ $(uname) == "Darwin" ]; then
    echo "Opening Jupyter Notebook in Safari..."
    open "$NOTEBOOK_URL"

else
    echo "Unable to automatically open Jupyter Notebook, unknown platform."
fi

# Show the URL of the running notebook instance
echo
echo "Notebook is running at:"
echo "$NOTEBOOK_URL"
echo
echo "Use './stop' to stop the container."

