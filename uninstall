#!/bin/bash

# Elevate permissions
[ "$UID" -eq 0 ] || exec sudo bash "$0" "$@"

# Get the current directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Script constants
PROJECT_NAME="spark"
NOTEBOOK_DIR="$DIR/notebook"
DOCKER_IMAGE="timvisee/hhs-p7-spark-docker:latest"

# Log a normal message.
# $1: Message.
log_normal() {
  # Print a message in orange
  printf "\e[0;33m    $1\e[0m\n"
}

# Log a success message.
# $1: Message.
log_success() {
  # Print a message in green with a checkmark
  printf "\e[0;32m[✔] $1\e[0m\n"
}

# Log a warning message.
# $1: Message.
log_warning() {
  # Print a message in red with a cross
  printf "\e[0;31m[!] $1 $2\e[0m\n"
}

# Log an error message.
# $1: Message.
log_error() {
  # Print a message in red with a cross
  printf "\e[0;31m[✖] $1 $2\e[0m\n"
}

# Log a question message.
# $1: Message.
log_question() {
  # Print a message in orange with a question mark
  printf "\e[0;33m[?] $1\e[0m\n"
}

# Log an status message.
# $1: Message
log_status() {
  # Print an indented message in purple
  printf "\e[0;35m    $1\e[0m\n"
}

# Log an info message.
# $1: Message
log_info() {
  # Print an indented message in orange
  printf "\e[0;33m[i] $1\e[0m\n"
}

# Check whether a command exists
# $1: Command to check for
command_exists() {
    type "$1" &> /dev/null ;
}

# Header
log_info "Uninstallation script."
echo
log_status "Repository directory: $DIR"
echo

# Actions
CUSTOM="yes"
UNINSTALL_CONTAINER="yes"
UNINSTALL_USER_DATA="yes"
UNINSTALL_REPO="yes"

# Confirm the user wan't to uninstall
log_question "You're about to uninstall the container and all it's data."
log_normal "Are you sure you want to continue?"
PS3="Choose your action: "
select ENTRY in "Yes, uninstall custom" "Yes, uninstall everything" "No, quit!"
do
    case $ENTRY in
        "Yes, uninstall custom")
            CUSTOM=yes
            break
            ;;
        "Yes, uninstall everything")
            CUSTOM=no
            break
            ;;
        "No, quit!")
            log_success "Quitting uninstallation."
            exit
            break
            ;;
    esac
done
echo

# Configure what to uninstall
if [ $CUSTOM == "yes" ]; then
    # Ask whether to remove user data
    log_question "Would you like to uninstall your user data?"
    PS3="Choose your action: "
    select ENTRY in "Yes" "No" "More information" "Quit"
    do
        case $ENTRY in
            "Yes")
                UNINSTALL_USER_DATA=yes
                break
                ;;
            "No")
                UNINSTALL_USER_DATA=no
                break
                ;;
            "More information")
                echo
                log_info "User data information:"
                log_normal "This option will uninstall all files in Notebook."
                log_normal "It will remove the assessments, tutorials and your own data."
                log_normal "The assesments and tutorials will be automatically"
                log_normal "installed again when starting the container."
                echo
                ;;
            "Quit")
                log_success "Quitting uninstallation."
                exit
                break
                ;;
        esac
    done
    echo

    # Ask whether to remove the container image
    log_question "Would you like to uninstall the container (~1.3GB)?"
    PS3="Choose your action: "
    select ENTRY in "Yes" "No" "More information" "Quit"
    do
        case $ENTRY in
            "Yes")
                UNINSTALL_CONTAINER=yes
                break
                ;;
            "No")
                UNINSTALL_CONTAINER=no
                break
                ;;
            "More information")
                echo
                log_info "Container information:"
                log_normal "This option will remove and uninstall the container."
                log_normal "Uninstalling this will free about 1.3GB of disk space."
                log_normal "These files will automatically be downloaded again"
                log_normal "when starting the container."
                echo
                ;;
            "Quit")
                log_success "Quitting uninstallation."
                exit
                break
                ;;
        esac
    done
    echo

    # Ask whether to remove the repository
    log_question "Would you like to uninstall the repository with all the scripts?"
    PS3="Choose your action: "
    select ENTRY in "Yes" "No" "More information" "Quit"
    do
        case $ENTRY in
            "Yes")
                UNINSTALL_REPO=yes
                break
                ;;
            "No")
                UNINSTALL_REPO=no
                break
                ;;
            "More information")
                echo
                log_info "Repository information:"
                log_normal "This option will remove the repository with all scripts."
                log_normal "This includes all management scripts such as './start' and './stop'"
                log_normal "The repository can be installed again from GitHub."
                echo
                ;;
            "Quit")
                log_success "Quitting uninstallation."
                exit
                break
                ;;
        esac
    done
    echo
fi

# Stop any running container
./stop

log_status "Starting uninstallation."

# Uninstall user data
if [ $UNINSTALL_USER_DATA == "yes" ]; then
    log_status "Uninstalling user data..."
    sudo rm -rf "$NOTEBOOK_DIR"
    log_success "User data uninstalled!"
fi

# Uninstall the container
if [ $UNINSTALL_CONTAINER == "yes" ]; then
    log_status "Uninstalling container..."
    sudo docker-compose -f "$DIR/docker-compose.yml" -p "$PROJECT_NAME" rm -f
    if [[ "$(docker images -q $DOCKER_IMAGE 2> /dev/null)" != "" ]]; then
        log_status "Removing container image..."
        sudo docker rmi "$DOCKER_IMAGE"
    fi
    log_success "Container uninstalled!"
fi

# Uninstall the repository
if [ $UNINSTALL_REPO == "yes" ]; then
    log_status "Uninstalling repository..."
    sudo rm -rf $DIR
    log_success "Repository uninstalled!"
fi
echo

# Move to the parent directory
cd ..

# Notify the user about docker
if [ $UNINSTALL_CONTAINER == "yes" ] && [ $UNINSTALL_REPO == "yes" ]; then
    log_info "This project doesn't require docker anymore, thus it may be uninstalled."
    log_normal "This must be done manually."
fi

# We're done!
log_success "Uninstallation finished!"
echo
